[
{
	"uri": "/vi/",
	"title": "AWS CloudWatch Workshop",
	"tags": [],
	"description": "",
	"content": "AWS CloudWatch Workshop Tổng quan Amazon CloudWatch là dịch vụ theo dõi và quản lý cung cấp dữ liệu và thông tin định hướng hành động cho tài nguyên cơ sở hạ tầng và ứng dụng AWS, ứng dụng lai cũng như ứng dụng tại chỗ. Bạn có thể thu thập và tiếp cận tất cả dữ liệu về hiệu năng và hoạt động dưới hình thức nhật ký và số liệu trong cùng một nền tảng, thay vì theo dõi trong các silo (máy chủ, mạng hoặc cơ sở dữ liệu). CloudWatch cho phép bạn theo dõi toàn diện (ứng dụng, cơ sở hạ tầng và dịch vụ) và tận dụng cảnh báo, nhật ký và dữ liệu sự kiện để tự động hành động và giảm thời gian xử lý trung bình (MTTR). Dịch vụ này giúp bạn giải phóng tài nguyên quan trọng và tập trung vào việc xây dựng các ứng dụng và giá trị doanh nghiệp.\nCloudWatch cung cấp thông tin định hướng hành động, hỗ trợ việc tối ưu hóa hiệu năng ứng dụng, quản lý sử dụng tài nguyên và hiểu rõ tình trạng hoạt động của toàn hệ thống. CloudWatch hiển thị dữ liệu số liệu và nhật ký chi tiết đến từng giây, duy trì dữ liệu trong 15 tháng (số liệu) và cho phép tính toán trên số liệu. Dịch vụ này cũng giúp bạn phân tích dựa trên dữ liệu cũ nhằm tối ưu hóa chi phí và thu thập thông tin trong thời gian thực góp phần tối ưu hóa ứng dụng và tài nguyên cơ sở hạ tầng. Bạn có thể sử dụng CloudWatch Container Insights để theo dõi, khắc phục sự cố và cảnh báo ứng dụng và vi dịch vụ có trong bộ chứa của bạn. CloudWatch thu thập, tổng hợp và tóm tắt thông tin sử dụng điện toán (như CPU, bộ nhớ, ổ đĩa và dữ liệu mạng) cũng như thông tin chẩn đoán (như lỗi khi khởi động lại bộ chứa) nhằm giúp kỹ sư DevOps cô lập và giải quyết sự cố một cách nhanh chóng. Container Insights cung cấp cho bạn thông tin chi tiết từ các dịch vụ quản lý bộ chứa như Amazon ECS for Kubernetes (EKS), Amazon Elastic Container Service (ECS), AWS Fargate và Kubernetes (k8s) độc lập.\nNội dung Giới thiệu Các bước chuẩn bị CloudWatch Metric CloudWatch Logs CloudWatch Alarm CloudWatch Dashboard Dọn dẹp tài nguyên "
},
{
	"uri": "/vi/4-cloud-watch-logs/4.1-logs/",
	"title": "CloudWatch Logs",
	"tags": [],
	"description": "",
	"content": "CloudWatch Logs Trong trang chính của CloudWatch.\nPhần menu bên phải, xổ Logs xuống. Chọn Log groups. Trên thành tìm kiếm, nhập /ec2 và ấn chọn /ec2/linux/var/log/messages. Chọn một instance bất kì để xem. Ở đây chúng ta có thể thấy log từ instance này tạo ra, tới từ nhiều nguồn khác nhau như: dhclient, NET, ec2net, systemd\u0026hellip; Trở lại thông tin của group /ec2/linux/var/log/messages. Giờ chúng ta sẽ cài đặt thời gian huỷ event (log) này.\nXổ Actions. Edit retention setting. Trong Retention setting, chọn 1 week (7 days) cho Expire events after. Ok thì đó là một số thao tác cơ bản với Logs, bạn có thể biết được trong instance đó các log có thể là tới từ đâu, từ dịch vụ nào, từ ứng dụng nào.\n"
},
{
	"uri": "/vi/1-introduction/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Tổng quan Trong bài lab này chúng ta sẽ thực hành với Amazon CloudWatch, thông qua các thao tác sau:\nThực hành thao tác với các Metrics được gửi từ các ứng dụng mẫu đang chạy trong các EC2 Instances đã được setup từ trước đó. Xem các Logs cũng được gửi từ chính các ứng dụng chạy trong các EC2 Instances đó. Sau đó là tạo các Metrics từ Logs. Tạo Alarm từ các Metrics. Và cuối cùng là thực hiện việc thêm các Custom Metrics, Alarm vào trong CloudWatch Dashboard để thiện quan sát hệ thống. Đây là bài workshop phù hợp cho những bạn / anh / chị có định hướng làm về System để bắt đầu sử dụng dịch vụ CloudWatch để quan sát một hệ thống đơn giản từ đó đưa ra được góc nhìn trực quan hơn về System Monitoring / Observation.\n"
},
{
	"uri": "/vi/3-cloud-watch-metric/3.1-view-metrics/",
	"title": "Xem các Metrics",
	"tags": [],
	"description": "",
	"content": "Xem các Metrics Đầu tiên, chúng ta sẽ thực hành thao tác xem các metrics.\nTruy cập AWS Management Console\nTìm CloudWatch Chọn CloudWatch Trong giao diện CloudWatch\nXổ phần Metrics ở bên menu bên trái xuống. Chọn All metrics. Trong giao diện biểu đồ của metrics. Nhập EC2 vào trong ô tìm kiếm và tìm. Sau khi ra kết quả, chọn EC2 \u0026gt; Pre-Instance Metrics. Trên thanh tìm kiếm, gõ CPUUtilization và tìm kiếm Bạn có thể thấy được là khi gõ tìm kiếm, thì mặc định nó sẽ tìm theo Metric name.\nThêm thử 2 trong số 5 instances được tạo ra từ CloudFormation stack, để xem các thông số CPUUtilization của 2 instances này được thể hiện như thế nào (bạn nên cuộn xuống để thấy). Ở đây thì chúng ta có thể kết luận là: cả 2 instances này bắt đầu hoạt động vào lúc khoảng 2:40, và cũng là lúc có nhiều hoạt động nhất. Sau đó đổ dần về 3:30 thì có vẻ như cả 2 instances này đã làm xong công việc của nó.\nTiếp theo là chúng ta sẽ thực hiện việc xem các metrics khác của cùng một Instance.\nTích bỏ đi dòng của Instance B. Xoá tag tìm kiếm CPUUtilization. Trên thanh tìm kiếm, nhập EBSWriteBytes và tìm kiếm. Kéo xuống và tích chọn Instance A Ở biểu đồ này thì chúng ta cũng thấy một điều tương tự, vào khoảng thời gian đầu mà instance này thực hiện công việc, thì lượng đọc ghi vào EBS rất nhiều, hầu như là CPUUtilization \u0026amp; EBSWriteBytes trùng với nhau (có thời điểm là không trùng). Từ đây thì mình có thể thấy được là ứng dụng của chúng ta cần thao tác với EBS khi khởi động, nhưng ở đoạn trùng thì không cần thao tác với EBS do nó đang thực hiện một thao tác nào đó khác.\nBạn có thể ẩn một trong 2 đi để xem kỹ hơn.\nNhưng chúng ta sẽ không phải làm như thế này. Ở bước tiếp theo chúng ta sẽ đi thao tác với các biểu đồ này để có được cái nhìn trực quan hơn.\nThao tác với biểu đồ Ở bước trước thì biểu đồ của chúng ta khó có thể nhìn được vì cả 2 đơn vị của CPUUtilization và EBSWriteBytes đang ở trên cùng tục tung (Oy), nên trong phần này chúng ta sẽ tách nó ra và thêm một số \u0026ldquo;dấu\u0026rdquo; để việc quan sát biểu độ dễ dàng hơn.\nVào trong tab Graphed metrics, ở dòng EBSWriteBytes, cột Y axis, chọn \u0026gt;. Có thể thấy biểu đồ của chúng ta trông đã khác hơn vừa rồi. Tiếp theo, chúng ta sẽ thêm \u0026ldquo;mark\u0026rdquo; cho biểu đồ.\nVào trong tab Options. Ấn chọn Add horizontal annotation. Nhập một số thông tin cho horizontal annotation như sau:\nLabel: 5% Mark. Value: 5. Và bạn có thể thấy một đường kẻ nét đứt hiện trên biểu đồ, có nhãn.\nTạo thêm Vertical annotation với label là Job start. Và chúng ta sẽ thấy thêm một đường kẻ dọc, nét đứt hiện trên biểu đồ. Nhưng Job start không phải là ở thời điểm 2:16 như mặc định đã tạo. Nên chúng ta cần sẽ phải chỉnh sửa lại thông số này.\nChỉnh lại Date cho vertical annotation.\nDi trỏ chuột vào trong phần đầu của đường chỉ trên biểu đồ. Ở đây thì chúng ta có thể thấy nó Job được bắt đầu vào khoảng 02:40. Sửa lại thông tin giờ của Date của Job start thành 02:40. Ấn chọn Apply để thay đổi. Đường Job start đã thay đổi vị trí.\nOk, thì đó là những gì mà chúng ta thực hiện thao tác trên biểu đồ. Trong phần sau, chúng ta sẽ thao tác chủ yếu với các biểu thức và bạn cũng có thể xoá 2 đường dấu này đi để sang bước tiếp theo.\n"
},
{
	"uri": "/vi/2-preparatory-steps/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Các bước chuẩn bị Truy cập vào AWS Management Console\nTìm CloudFormation Chọn CloudFormation Trong giao diện CloudFormation\nChọn Create stack Chọn With new resources (standard) Trong giao diện Create stack. Bạn tải file cấu hình template về trước và sau đó thực hiện các bước.\nTrong phần Prerequisite - Prepare template, chọn Choose an existing template. Tiếp theo chọn Upload a template file. Ấn Choose file để tải lên file template mới tải về. Ấn Next Tiếp đến là điền các thông tin như sau:\nName: FCJ-CloudWatch-Workshop (hoặc tên nào đó mà bạn thích, nhưng nên đặt một cái tên dễ gợi nhớ). RegionId: chọn đúng id của region mà bạn đang thực hiện bài lab này, như trong bài này thì mình chọn us-east-1 (N. Virginia). Parameter còn lại bạn nên giữ nguyên. Ấn Next. Ở trang này thì chúng ta không cần cấu hình gì hết, nên cuộn xuống dưới cùng, tích chọn I acknowledge that AWS CloudFormation might create IAM resources with custome names. Sau đó ấn Next. Sau đó thì xác minh lại một lần nữa, cuộn xuống dưới cùng và ấn Submit để tạo Stack. Sau đó thì một stack mới sẽ được tạo, các bạn chờ khoảng 5 phút để hoàn tất việc cài đặt. Khi cài đặt xong thì chúng ta có được kết quả như sau.\nOk như vậy là bước chuẩn bị đã hoàn tất. Trong các bước sau thì chúng ta sẽ tiến hành thực hành trên CloudWatch.\n"
},
{
	"uri": "/vi/4-cloud-watch-logs/4.2-logs-insights/",
	"title": "CloudWatch Logs Insights",
	"tags": [],
	"description": "",
	"content": "CloudWatch Logs Insights Trong phần này thì chúng ta sẽ thực hiện tạo logs từ một ứng dụng, sau đó là sẽ query những logs này ở trong CloudWatch Logs Insights. Mình sẽ chọn một instance nào đó để làm mẫu.\nTrên thanh tìm kiếm dịch vụ.\nNhập EC2. Chọn EC2. Vào trong trang Instances của EC2 Console\nChọn một Instance bất kì, ở đây mình chọn Instance-A. Ấn chọn Connect. Trong trang Connect to instance.\nChọn tab Session Manager. Ấn Connect. Chờ một ít phút thì một Terminal hiện lên.\nĐầu tiên là vào trong tmp. Sau đó là tải file py script về. cd /tmp sudo aws s3 cp s3://workshop-template-bucket/logger.py . Cấp quyền thực thi và thực thi file script này. sudo chmod +x logger.py python3 logger.py \u0026amp; Kiểm tra các logger đang chạy dưới dạng process ps -aux | grep logger Có thể thấy thì hiện tại có 2 processes đang chạy, nó sẽ chạy cho tới cuối bài.\nDùng lệnh để in ra các dòng log từ file /var/log/messages, nó sẽ in cho tới khi nào mình huỷ. sudo tail -f /var/log/messages Trở lại CloudWatch Console, vào trong Logs Insights ở thanh menu bên trái. Chúng ta sẽ thực hiện query logs ở trong này. Trong Selection criteria, tìm /ec2 và chọn /ec2/linux/var/log/messages. Nhập vào dòng query như bên dưới và ấn Run query. fields @timestamp, @message\r| sort @timestamp desc\r| limit 20 Và được kết quả.\nĐây chính là log mà chúng ta mới tạo ra ở bước trên.\nGiờ thì thử query là các ERROR Logs. fields @timestamp, @message\r| filter @message like /ERROR/\r| sort @timestamp desc\r| limit 20 Cũng là những log lỗi mà hồi nãy chúng ta đã tạo ra.\nTiếp theo là các WARN Logs. fields @timestamp, @message\r| filter @message like /WARN/\r| sort @timestamp desc\r| limit 20 Đây là các logs mới được tạo ra.\nGiờ thử query lại log, lỗi, chúng ta cũng sẽ thấy được các log mới được tạo ra. Ngoài ra thì chúng ta còn có thể thực hiện được việc query theo từ khoá khác. Như câu query ở bên dưới. fields @timestamp, @message\r| filter @message like /eth0/\r| sort @timestamp desc\r| stats count (*) by bin() Trực quan hoá query log Ngoài ra thì chúng ta còn có thể xem được biểu đồ của các query này nữa. Chuyển sang tab Visualization.\nLưu lệnh truy vấn Về sau thì có thể chúng ta sẽ có nhiều câu truy vấn cần sử dụng lại hoặc là có những câu truy vấn phức tạp hơn mà chúng ta cần phải lưu lại. Thì Logs Insights có hỗ trợ cho chúng ta lưu lại các câu truy vấn này.\nVí dụ mình sẽ lưu lại câu truy vấn lỗi.\nTrở lại màn hình chính của Logs Insights. Dán lại lệnh query tìm Error logs. Ấn chọn Save. Trong trang Save a new query, điền các thông tin như\nQuery name: Erors. Folder: cloudwatch-workshop, và tích chọn Create new. Kiểm tra lại thông tin trong phần Query definition details. Ấn Save. Lịch sử truy vấn Logs Insights còn cho phép chúng ta có thể xem lại được lịch sử đã truy vấn. Trên giao diện, ấn chọn History (dưới Query editor).\nTrong phần tiếp theo, chúng ta sẽ tiếp tục dùng hành vi này của các logger để tạo ra một Metrics Filter, để chuyển các Log thành Metrics. Sau đó sẽ thao tác nó với Alarm.\n"
},
{
	"uri": "/vi/3-cloud-watch-metric/3.2-search-expression/",
	"title": "Thực hiện các phép tìm kiếm",
	"tags": [],
	"description": "",
	"content": "Biểu thức tìm kiếm Ở phần trước thì chúng ta thực hiện xem metric theo cách thủ công, tuy nhiên nó vẫn còn nhiều hạn chế cũng như là phải thao tác nhiều lần với nhiều metrics khác nhau. Trong phần này chúng ta có thể thực hiện việc này nhanh hơn với Search Expression.\nXoá hết các thông tin trong biểu đồ cũ đi, ấn X hoặc ấn Clear graph. Trở lại tab Browse\nXoá bộ lọc EBSWriteBytes đi. Thêm lại CPUUtilization. Ấn Graph search. Quay trở lại tab Graphed metrics, chúng ta có thể thấy cột Details có một biểu thức tìm kiếm vừa mới hiện lên ở đây. Nhập một biểu thức mới với nội dung như bên dưới. Biểu thức này chúng ta đang thực hiện tìm kiếm ở một Namespace khác ngoài EC2. Sau đó là ấn Apply để áp dụng.\nỞ góc bên trên bên phải cùng\nXổ ô Line. Chọn Stacked area. Và biểu đồ của chúng ta đã dễ nhìn hơn.\nTìm lượng bộ nhớ trung bình sử dụng theo phần trăm (Disk Used Percent) SEARCH(\u0026#34;disk_used_percent\u0026#34;, \u0026#39;Average\u0026#39;, 300) Tìm theo từ khoá \u0026ldquo;used\u0026rdquo; SEARCH(\u0026#34;used\u0026#34;, \u0026#39;Average\u0026#39;, 300) Có thể thấy là kết quả ít nhiều đã khác đi.\nOk vậy thì chúng ta vừa mới thực hiện xong cơ bản các phép tìm kiểu ở trong CloudWatch Console. Sang phần tiếp theo thì chúng ta sẽ thực hiện các phép toán đơn giản.\n"
},
{
	"uri": "/vi/3-cloud-watch-metric/",
	"title": "CloudWatch Metric",
	"tags": [],
	"description": "",
	"content": "CloudWatch Metric Khi thao tác với CloudWatch, thì chúng ta sẽ chủ yêu là \u0026ldquo;nhìn\u0026rdquo;, nên CloudWatch đã cung cấp cho chúng ta các biểu đồ, data table trực quan để quan sát Metric. Việc này rất quan trọng vì nó nói lên được tình trạng của ứng dụng / hệ thống mà chúng ta đang vận hành, từ đó giúp đưa ra được các quyết định trong việc tối ưu, nâng cấp.\nTrong phần này thì chúng ta sẽ cùng đi thao tác:\nLựa ra các metric mà chúng ta muốn xem (đến từ những ứng dụng mà chúng ta đã setup từ phần trước). Thực hiện các phép tìm kiếm Metric nâng cao để hiển thị lên biểu đồ. Thực hiện các phép tính toán Metric nâng cao để hiển thị nhiều thông tin hơn như là tổng, trung bình, rank của các Metric. Thực hiện tạo các Dynamic Label để phần chú thích biểu đồ trực quan hơn. Nội dung của phần này bao gồm:\nXem các Metrics Thực hiện các phép tìm kiếm Thực hiện các phép toán học Tạo Dynamic Labels "
},
{
	"uri": "/vi/4-cloud-watch-logs/4.3-metric-filter/",
	"title": "CloudWatch Metric Filter",
	"tags": [],
	"description": "",
	"content": "CloudWatch Metric Filter Quay lại màn hình chính của CloudWatch\nChọn Log groups Tìm /ec2. Chọn /ec2/linux/var/log/messages Trong giao diện của /ec2/linux/var/log/messages\nẤn xổ Actions. Ấn Create metric filter. Trong phần Define Pattern, điền một số thông tin như sau\nFilter pattern: xổ xuống và chọn ERROR. Test pattern: xổ xuống và chọn bất kì một instance nào, nhưng nên chọn instance mà chúng ta mới thực hiện việc tạo processes ở 2 bước trước. Ấn chọn Test pattern để kiểm tra thử xem filter chạy ổn không. Trong phần Create filter name của Assign metric, nhập PythonAppErrors. Trong phần Metric details, nhập một số thông tin như sau:\nMetric namespace: ec2-logs. Metric name: /var/log/messages - ERROR. Metric value: 1. Default value: 0. Unit: xổ xuống và chọn Count. Ấn Next. Review xong và ấn chọn Create metric filter. Trở lại Metrics \u0026gt; All metrics.\nTìm 2 từ khoá là /var/log/messages và ERROR. Chọn ec2-logs \u0026gt; Metrics with no dimensions. Như vậy là chúng ta đã có được một Metric được lấy từng những ERROR Logs trong ứng dụng. Trong bước tiếp theo thì chúng ta sẽ thiết lập Alarm cho metric này.\n"
},
{
	"uri": "/vi/3-cloud-watch-metric/3.3-math-expression/",
	"title": "Thực hiện các phép toán học",
	"tags": [],
	"description": "",
	"content": "Biểu thức toán học Tiếp tục, trong phần này chúng ta sẽ thực hiện các thao tác biểu thức toán cơ bản.\nĐầu tiên là dọn dẹp biểu thức tìm kiếm trước đó. Về lại tab Browse.\nẤn Graph search để lấy lại biểu đồ như ban đầu ở bước trước. Sau đó xổ phần Add math ở bên góc trên bên phải, dưới biểu đồ.\nXổ tiếp Filter. Chọn Top 10 by sum. Giờ thì chúng ta sẽ tiến hành sắp xếp lại biểu đồ dựa trên biểu thức tìm kiếm đầu tiên, với biểu thức như bên dưới. SORT(e1, SUM, DEC, 3) OK xong, trong phần này thì chúng ta thực hiện đơn giản như vậy thôi, tiếp tục thực hành ở phần sau.\n"
},
{
	"uri": "/vi/4-cloud-watch-logs/",
	"title": "CloudWatch Logs",
	"tags": [],
	"description": "",
	"content": "CloudWatch Logs Logs là phần không thể thiếu trong mỗi hệ thống, nó cho mình biết rất nhiều thông tin ở trong hệ thống như:\nCác hoạt động trong ứng dụng. Những ai đã thực hiện những hành động gì? Có lỗi gì diễn ra trong hệ thống không? Có cảnh báo gì không? Trong phần này thì chúng ta sẽ đi thao tác một số thứ cơ bản như:\nXem logs. Tạo logs và truy vấn các logs. Tạo Logs Filter và lấy Metric của Log từ đó. Các thao tác ở trong bài này chúng ta cũng sẽ thực hiện nó ở những bài sau, nên bạn hãy làm phần này thật kĩ và cẩn thận.\nCloudWatch Logs CloudWatch Logs Insights CloudWatch Metric Filter "
},
{
	"uri": "/vi/3-cloud-watch-metric/3.4-dynamic-label/",
	"title": "Tạo dynamic labels",
	"tags": [],
	"description": "",
	"content": "Dynamic Labels Từ đầu tới giờ thì các bạn có thể thấy là nhãn trong phần chú thích của biểu đồ (Legend) chưa lần nào được cập nhật. Chúng ta có thể chỉnh sửa nó thủ công, tuy nhiên việc chỉnh sửa trên nhiều Metrics không phải là một ý hay. Nên trong phần này, chúng ta sẽ thao tác cơ bản cách đổi nhãn tự động mà không cần phải tự tay thay đổi.\nXoá các biểu thức cũ trong phần trước. Xoá hết các Filers và ấn vào All để trở phần phần namespaces. Sau đó là vào trong namespace CWAgent. Chọn tiếp Dimension là ImageId, InstanceId, InstanceType, exe, process_name. Trên thanh tìm kiếm, chúng ta nhập 2 thông tin sau.\nexe=cloudwatch MetricName=procstat_memory_rss (trong phần này thì chúng ta chỉ rõ là cần Metric name). Tiếp tục ấn vào Graph search để hiển thị biểu đồ. Sang tab Graphed metrics.\nXổ Add dynamic label. Xổ All labels. Chọn PROP(\u0026lsquo;Dim.DimName\u0026rsquo;). Chúng ta có thể thấy là Label trên biểu đồ đã thay đổi.\nSửa lại biểu thức của label theo dạng. ${PROP(\u0026#39;Dim.exe\u0026#39;)} - ${PROP(\u0026#39;Dim.InstanceId\u0026#39;)} - ${PROP(\u0026#39;MetricName\u0026#39;)} Label đã chuyển về thành các phần như sau.\n"
},
{
	"uri": "/vi/5-cloud-watch-alarm/",
	"title": "CloudWatch Alarms",
	"tags": [],
	"description": "",
	"content": "CloudWatch Alarms Trong phần này chúng ta sẽ setup Alarm cho Error Log Metric mà chúng ta đã tạo từ phần trước.\nTrở lại màn hình chính của CloudWatch.\nChọn Alarms ở menu bên trái. Chọn All alarms. Ấn chọn Create alarm. Chọn Select metric. Cửa sổ metrics hiện lên, trong Custom namespaces, chọn ec2-logs.\nChọn tiếp Metrics with no dimensions, chọn /var/log/messages và ấn chọn Select metric.\nTrong phần Specify metric and conditions, chọn Period là 1 minutes. Trong phần Conditions\nThreshold type: Static. Điều kiện: Greater than 10. Bạn sẽ thấy một đường nét đứt ngang, chỉ ra rằng đây chính là ngưỡng mà Alarm sẽ được kích hoạt =\u0026gt; khi có quá nhiều lỗi thì đã xảy ra việc gì đó bất trường trong ứng dụng, cần phải được kiếm tra ngay.\nSau đó là ấn Next để tiếp tục.\nGiờ thì chúng ta cấu hình thông báo như sau\nAlarm state trigger: In alarm. Chọn Create new topic. Tên topic là: Error_logs_reach_10. Email thông báo tới: bạn sẽ nhập email của bạn vào, ở đây mình sẽ nhập của mình. Ấn Create topic. Ấn chọn Next.\nỞ bước cuối, nhập tên alarm là PythonApplicationErrorAlarm và ấn chọn Next. Xem lại kết quả và ấn chọn Create alarm. Kết quả\nĐăng nhập vào Gmail hoặc bất kì trang email nào mà bạn dùng. Bạn sẽ thấy một email được gửi tới từ AWS Notification. Ấn chọn Confirm subscription.\nOk, như vậy thì chúng ta đã setup Alarm xong.\n"
},
{
	"uri": "/vi/6-cloud-watch-dashboard/",
	"title": "CloudWatch Dashboards",
	"tags": [],
	"description": "",
	"content": "CloudWatch Dashboards Đây là phần cuối của workshop này, trong phần này thì chúng ta sẽ thực hiện việc tạo một Dashboard đơn giản để quản lý các Metrics, Alarms mà mình đã tạo ra, cụ thể là Error Logs mà chúng ta đã tạo ở phần trước đó.\nThêm alarm mà chúng ta mới tạo vào trong Dashboard.\nChọn PythonApplicationErrorAlarm. Xổ Actions. Chọn Add to dashboard. Trong dialog Add to dashboard, chọn Create new. Nhập tên cho dashboard là CloudWatch-Workshop.\nẤn chọn Create. Ấn chọn Add to dashboard. Và đây là dashboard của chúng ta.\nBạn có thể có một số thao tác trên Widget này.\nNếu như bạn làm tới đây rồi thì chúc mừng bạn đã hoàn thành xong bài workshop này!\n"
},
{
	"uri": "/vi/7-clean-up-resources/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Dọn dẹp tài nguyên Để dọn dẹp tài nguyên thì các bạn chỉ đơn giản là vào trong CloudFormation stack để xoá stack mà chúng ta đã tạo ở đầu bài. Còn Metrics với Logs thì nó sẽ tồn tại ở đó tới tối đa là 15 tháng.\nTrên thanh tìm kiếm\nNhập CloudFormation. Chọn CloudFormation. Chọn stack đã tạo, ấn chọn Delete. Ấn chọn tiếp Delete để xác nhận xoá. Stack đang xoá, chờ một lúc sau thì stack sẽ được xoá.\n"
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]